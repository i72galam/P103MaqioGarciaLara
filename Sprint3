//Registro clientes del Gimnasio

#include <iostream>

#include <string.h>
#include <fstream>
#include <stdlib.h>

//Limpiar pantalla
#ifdef _WIN32
#define CLEAR "cls"
#elif defined(unix)||defined(__unix__)||defined(__unix)||defined(__APPLE__)||defined(__MACH__)
#define CLEAR "clear"
#else
#error "SO no soportado para limpiar pantalla"
#endif

using namespace std;


class menu
{
private:
    string nombre;
    string correo; //domicilio
    string limiterecursos; //celular
    string limiteTiempo; //fechapa
    string tipodeUsuario;

public:
    void altaCliente();
    void bajaCliente();
    void modificarCliente();
    void listarClientes();
    void menuPrincipal();
    void detallesCliente();
    void mostarRegistro(string codigo);
};

void pausa();
void error();

void menu::menuPrincipal()
{
    int opcion;
    do
    {
        cout<<"\t\t\t\t***Registro de clientes del Gimnasio***\t\t\t\t\n\n";
        cout<<"1. Dar de alta un cliente\n\n";
        cout<<"2. Mostrar detalles de un cliente\n\n";
        cout<<"3. Listar clientes\n\n";
        cout<<"4. Dar de baja un cliente\n\n";
        cout<<"5. Modificar un cliente\n\n";
        cout<<"6. Salir\n\n";
        cout<<"Opci\242n: ";
        cin>>opcion;
        system(CLEAR);
        switch(opcion)
        {
        default:
            cout<<"Ha ingresado una opci\242n no valida!\n\n";
            break;

        case 1:
            

        case 2:
            

        case 3:
            listarClientes();
            break;

        case 4:
           

        case 5:
            modificarCliente();
            break;

        case 6:
            break;
        }
    }
    while(opcion!=6);
}


void menu::modificarCliente()
{
    string nombre;
    string correo; //domicilio
    string limiterecursos; //celular
    string limiteTiempo; //fechapa
    string tipodeUsuario;
    ifstream lectura;
    ifstream verificador;
    ofstream auxiliar;
    string auxtipoUs;
    string TipoModif;
    string auxNombre;
    string auxCorreo;
    string auxLimiteR;
    string auxLimiteT;
    bool encontrado=false;
    bool coincidencia=false;
    bool mismoCodigo=false;
    lectura.open("clientes.txt",ios::in);
    verificador.open("clientes.txt",ios::in);
    auxiliar.open("auxiliar.txt",ios::out);
    cout<<"\t\t\t\t***Modificar los datos de un cliente***\t\t\t\t\n\n";
    if(lectura.is_open()&&verificador.is_open()&&auxiliar.is_open())
    {
        fflush(stdin);
        cout<<"Ingresa el c\242digo del cliente que deseas modificar: ";
        getline(cin,auxtipoUs);

        if(auxtipoUs=="")
        {
            do
            {
                cout<<"c\242digo de cliente no v\240lido!, intentalo nuevamente: ";
                getline(cin,auxtipoUs);
            }
            while(auxtipoUs=="");
        }

        TipoModif=auxtipoUs;

        getline(lectura,tipodeUsuario);
        while(!lectura.eof())
        {
            getline(lectura,nombre);
            getline(lectura,correo);
            getline(lectura,limiteRecursos);
            getline(lectura,limiteTiempo);

            if(auxtipoUs==codigoCliente)
            {
                encontrado=true;
                mostarRegistro(codigoModif);

                cout<<"**********************************************";
                cout<<"\n\n";
                cout<<"Ingresa la nueva informaci\242n para el cliente\n\n";
                fflush(stdin);
                cout<<"Ingresa el c\242digo del cliente: ";
                getline(cin,auxtipoUs);
                if(auxtipoUs==codigoModif)
                {
                    mismoCodigo=true;
                }
                if(mismoCodigo==false)
                {
                    do
                    {
                        if(auxtipoUs==codigoModif)
                        {
                            coincidencia=false;
                            break;
                        }
                        verificador.seekg(0);
                        getline(verificador,tipodeUsuario);
                        while(!verificador.eof())
                        {
                            getline(verificador,nombre);
                            getline(verificador,correo);
                            getline(verificador,limiteRecursos);
                            getline(verificador,limiteTiempo);

                            if(auxtipoUs==tipodeUsuario)
                            {
                                coincidencia=true;
                                cout<<"\n\nYa existe un cliente con ese c\242digo!\n\n";
                                cout<<"El cliente con ese c\242digo es: "<<nombre<<"\n\n";
                                cout<<"Ingresa un c\242digo v\240lido!: ";
                                getline(cin,auxtipoUs);

                                if(auxtipoUs=="")
                                {
                                    do
                                    {
                                        cout<<"\nc\242digo de cliente no v\240lido!, ";
                                        cout<<"intentalo nuevamente: ";
                                        getline(cin,auxtipoUs);
                                    }
                                    while(auxtipoUs=="");
                                }
                                break;
                            }

                            getline(verificador,tipodeUsuario);
                        }

                        if(verificador.eof()&&auxtipoUs!=tipodeUsuario)
                        {
                            coincidencia=false;
                        }

                    }
                    while(coincidencia==true);
                }
                system(CLEAR);
                cout<<"***Modificar los datos de un cliente***\n\n";
                cout<<"Ingresa el c\242digo del cliente que deseas modificar: ";
                cout<<TipoModif;
                mostarRegistro(TipoModif);
                cout<<"**********************************************";
                cout<<"\n\n";
                cout<<"Ingresa la nueva informaci\242n para el cliente\n\n";
                cout<<"Ingresa el c\242digo del cliente: ";
                cout<<auxtipoUs;
                cout<<"\n\n";
                fflush(stdin);
                cout<<"Ingresa el nombre del cliente: ";
                getline(cin,auxNombre);;
                fflush(stdin);
                cout<<"\n\n";
                cout<<"Ingresa el domicilio del cliente: ";
                getline(cin,auxCorreo);
                cout<<"\n\n";
                fflush(stdin);
                cout<<"Ingresa el n\243mero de telefono del cliente: ";
                getline(cin,auxLimiteR);
                cout<<"\n\n";
                fflush(stdin);
                cout<<"Ingresa la fecha de inscripci\242n del cliente: ";
                getline(cin,auxLimiteT);
                cout<<"\n\n";
                auxiliar<<auxtipoUs<<"\n"<<auxNombre<<"\n"<<auxCorreo<<"\n"<<auxLimiteR
                        <<"\n"<<auxLimiteT<<"\n";
                cout<<"El Registro se ha modificado correctamente.\n\n";
            }


            else
            {

                auxiliar<<tipodeUsuario<<"\n"<<nombre<<"\n"<<correo<<"\n"<<limiterecursos
                        <<"\n"<<limiteTiempo<<"\n";
            }


            getline(lectura,tipodeUsuario);
        }

    }
    else
    {
        error();
    }

    if(encontrado==false)
    {
        cout<<"\n\nNo se encontr\242 ning\243n registro con ese c\242digo!\n\n";
    }
    lectura.close();
    verificador.close();
    auxiliar.close();
    remove("clientes.txt");
    rename("auxiliar.txt","clientes.txt");
    pausa();
}
